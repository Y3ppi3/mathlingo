import { useEffect, useState } from "react";

// –û–ø—Ä–µ–¥–µ–ª–∏–º —Ç–∏–ø –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
interface UserData {
    id: number;
    username: string;
    email: string;
    // –î–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è
}

// –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–π URL API –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
const API_URL = import.meta.env.VITE_API_URL;

const Dashboard = () => {
    const [userData, setUserData] = useState<UserData | null>(null);
    const [error, setError] = useState("");
    const [isLoading, setIsLoading] = useState(true);

    useEffect(() => {
        const fetchUserData = async () => {
            try {
                console.log("üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ /api/me...");
                const response = await fetch(`${API_URL}/api/me`, {
                    method: "GET",
                    credentials: "include",
                    headers: { "Content-Type": "application/json" },
                });

                if (!response.ok) {
                    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
                    const errorData = await response.json().catch(() => ({}));
                    const errorMessage = errorData.detail || "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –í–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.";
                    throw new Error(errorMessage);
                }

                const data = await response.json();
                console.log("üì© –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
                setUserData(data);
            } catch (err: unknown) {
                if (err instanceof Error) {
                    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ:", err.message);
                    setError(err.message);
                } else {
                    console.error("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞:", err);
                    setError("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
                }
            } finally {
                setIsLoading(false);
            }
        };

        fetchUserData();
    }, []);

    if (error) {
        return (
            <div className="mt-16 container mx-auto px-4 py-6 text-red-500">
                –û—à–∏–±–∫–∞: {error}
            </div>
        );
    }

    if (isLoading) {
        return (
            <div className="mt-16 container mx-auto px-4 py-6">
                –ó–∞–≥—Ä—É–∑–∫–∞...
            </div>
        );
    }

    return (
        <div className="mt-16 container mx-auto px-4 py-6">
            <h2 className="text-2xl font-bold mb-4">–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h2>
            <p className="mb-2">ID: {userData?.id}</p>
            <p className="mb-2">–ò–º—è: {userData?.username}</p>
            <p className="mb-2">Email: {userData?.email}</p>
        </div>
    );
};

export default Dashboard;